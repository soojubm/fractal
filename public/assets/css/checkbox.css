// rem 으로 모듈화하기 어렵다. ex 1.5rem => top:0.125rem
// line-heght로 리셋스타일에 종속되지 않도록 함. + block
// height 테이블 내에서 세로 정렬에 필요
// 2줄 이상 대비
// nextjs + css module에서 type selector 이슈 .checkbox-input / .checkbox-label
// ! :focus

.checkbox-description {
  display: block !important;
  padding-left: calc(var(--size-tiny) + var(--space-2));
  color: var(--color-text-light);
}

.checkbox {
  display: flex;
  align-items: center;
  /* 이상 링크 */

  padding: var(--space-2) 0;

  position: relative;
  --checkbox-size: var(--size-tiny);
  --checkbox-size: 20px;
  --checkbox-radius: 50%;
  --checkbox-label-font-size: 14px;
}
.checkbox-link {
  margin: 0 0 0 auto;
  line-height: var(--checkbox-size);
  text-decoration: underline;
}

input[type="checkbox"] {
  opacity: 0;
  position: absolute;
  /* inline-size: 100%; */
}

input[type="checkbox"] ~ label {
  display: flex;
  align-items: center;
  gap: var(--space-2);
  line-height: var(--checkbox-size);
  position: relative;
  font-size: var(--checkbox-label-font-size);
}

input[type="checkbox"] ~ label:before {
  content: "";
  display: block;
  width: var(--checkbox-size);
  height: var(--checkbox-size);
  border: var(--border);
  border-radius: var(--checkbox-radius);
  background: var(--color-background);
  box-sizing: border-box;
}
input[type="checkbox"] ~ label:after {
  content: "";
  display: none;
  width: 7px;
  height: 3px;
  border-left: 2px solid;
  border-bottom: 2px solid;
  border-color: var(--gray200);
  position: absolute;
  left: 6px;
  top: 7px;
  transform: rotate(-50deg);
}

input[type="checkbox"]:checked ~ label:before {
  border-color: var(--color-primary);
  background-color: var(--color-primary);
  animation: ripple2 0.2s linear forwards;
}
input[type="checkbox"]:checked ~ label:after {
  display: block;
  border-color: #fff;
}
input[type="checkbox"]:disabled ~ label {
  opacity: 0.5;
  cursor: not-allowed;
}
input[type="checkbox"]:disabled ~ label:before {
  border-color: var(--gray200);
}
input[type="checkbox"]:disabled ~ label:after {
  border-color: var(--gray200);
}

input[type="checkbox"][indeterminate="true"] ~ label:before,
input[type="checkbox"][data-indeterminate="true"] ~ label:before {
  border-color: var(--green800);
  background: var(--green100);
}
input[type="checkbox"][indeterminate="true"] ~ label:after,
input[type="checkbox"][data-indeterminate="true"] ~ label:after {
  display: block;
  width: 8px;
  background: var(--color-primary);
  border: none;
  left: 4px;
  top: 48%;
  transform: rotate(0deg);
}

// hidden attribute
input[type="radio"] + label + *,
input[type="checkbox"] + label + * {
  display: none;
}
input[type="radio"]:checked + label + *,
input[type="checkbox"]:checked + label + * {
  display: block;
}

.checkbox[data-variant="plain"] {
  margin-left: -2px;
}

.checkbox[data-variant="plain"] input[type="checkbox"] ~ label:before {
  border: none;
  background-color: transparent;
}
.checkbox[data-variant="plain"] input[type="checkbox"] ~ label:after {
  display: block;
  border-color: #ccc;
  width: 10px;
  height: 4px;
  top: 6px;
}
.checkbox[data-variant="plain"] input[type="checkbox"]:checked ~ label:before {
}
.checkbox[data-variant="plain"] input[type="checkbox"]:checked ~ label:after {
  border-color: var(--color-primary);
}

.checkbox[data-variant="square"] {
  --checkbox-radius: 2px;
}
.checkbox[data-size="large"] {
  --checkbox-size: 24px;
  --checkbox-label-font-size: 16px;
}
